Git Configurations:

- yum install git
- git --version (atleast 1.7+V)
- git config --global user.name "SandeepGit"
- git config --global user.email "sandeep@git.com"
- cat .gitconfig
- git config

3 types of git configs

- Local --> trumps both global and system.
- Global --> On system gloablly. (git config --gloabl)
- System -->  Has Client/Server. (/etc/gitconfig)

- git config --system system.name "sandeep Git repo"
- cat /etc/gitconfig

user config overrides any other configs.

- git config --global core.editor vim --> default editor is vim
- git config --global core.pager 'more' --> default to user as more
- vi .gitignore_global --> include what things to incldue
- git config --global core.excludesfile ~/.gitignore_gloabl
- cat .gitconfig

## Git repositories:

- mkdir control-repo --> create a empty repositories
- git init
- cd .git --> by default created by git
To add a directory into git. Then init git in the directory.
Git works in terms of snapshots.
To remove file:
- git rm <filename>
To ignore some files to commit
- vi .gitignore --> include files in it. for example .git, .svn
- git add -- ignore the .gitignore
## Git Clone Repositories
- git clone <control-repo> <New-clone-name>
- git push 
- git pull <remote-repo>
Even we can clone to the remote repos' over an IP/ssh Key exchange
- git clone siadmin@10.10.10.1:/home/siadmin/ localrepo

## Git Tags
Immutable references
Pointer to spefic commits or a point in time
2 Flavors of Tags
1. Annotated Tag  -> creates additional tag in the repositories
2. Non-Annotated Tag

- git tag first-tag
- git tag
- git show first-tag
- git describe --tags
- git tag -a Version.1 -m "version 1 release" --> Annotated Tag
- git tag

## Branches
Way of differentitating a concurrent work going on.
- git branch -a
- git checkout -b <branch-name>
- git branch -a
Current branch denoted with *

## Merging
- git merge development --no-ff

- git log
- git log -p -2 --> p-diff
- git log --stat
- git log --pretty=oneline --> reference for each commit
- git log --pretty=format:"%h: %an, %ae, %cn, %cd, -%s"
	h- hashreference
	an- author name
	ae- author email
	cn- commiter name
	cd- commit date
	s- subject
- git log --pretty=format:"%h: %an, %ae, %cn, %cd, -%s" --graph --> graphical representation.

## Github

Free version -- Public
Paid Version -- Private Hosting/repositories
Add ssh key into clone rep.

- git clone git@github.com:sandeep/test.git
- git push origin master

## Atlassian BitBucket
Free Private Code Repositories - 5users

Add ssh key into BitBucket
-git remote add origin git@bitbucket.org:test/test.git

## Git Lab
Prerequsite
- yum install postfix
- systemctl enable postfix
- systemctl start postfix
disanle iptables
- vi /etc/selinux/config
	SELINUX=disable
	Reboot
- yum install httpd
- systemctl enable httpd
- systemctl start httpd

Download gitlab*.rpm from official Website --> I think version=7+
Install the gitlab*
- gitlab-ctl reconfigure 
 This uses the Chef, reddis, Unicorn, RubyOnRails,ngnix,postgresql, sidekig and other things in background
Need to include the FQDN
- vi /opt/gitlabembedded/cookbooks/gitlab/libraries/gitlab.rb
	external_url = 'FQDN'
- gitlab-ctl reconfigure
https://FQDN/
	root
	5ivel!fe --> default password says post installation
	Then, set up a New Password.

/opt/gitlab -- defaults installation path
/var/opt/gitlab --> all configs --> default configs
anything to be overriden can be done from gitlab.rb file.

- git remote add origin git@FQDN:user1/test.git
- git push -u origin master
- 
















